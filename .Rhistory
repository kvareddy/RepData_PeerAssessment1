datatab[datatab$VAL>=0,]
datatab[datatab$VAL,]
datatab[datatab$VAL=2,]
datatab[datatab$VAL==2,]
data[data$VAL==2,]
data[data$VAL>=14,]
size(data[data$VAL>=14,])
length(data[data$VAL>=14,])
dim(data[data$VAL>=14,])
dim(data)
dim(data[data$VAL>14,])
data[data$VAL>14,]
data[data$VEH>14,]
data[,14]
data[3,14]
View(datatab)
View(datatab)
View(datatab)
clear
clc
data <- read.table("temp.csv", header=TRUE)
datatable <- data.table(data)
datatable[c(2,3)]
datatable[datatable$VAL=="14"]
datatable[datatable$VAL=="15"]
datatable[datatable$VAL=="16"]
datatable[,table(VAL)]
datatable[,table(NPP)]
datatable[0,]
datatable[1,]
datatable[,table(NPP)]
datatable[,VAL]
datatable[,10]
data[,10]
dim(data)
data <- read.csv("temp.csv", header=TRUE)
dim(data)
datatable <- data.table(data)
datatable[,table(VAL)]
datatable[,VAL]
datatable[,VAL>=14]
datatable[,.N,by==VAL]
datatable[,.N,by=VAL]
datatable[,.N,by=(VAL>=14)]
datatable[,.N,by=(VAL>=24)]
datatable[,FES]
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
downloadfile(url, destfile="temp.xlsx")
download.file(url, destfile="temp.xlsx")
data <- read.xlsx("temp.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
install.packages("xlsx")
library(xlsx)
data <- read.xlsx("temp.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
library(rJava)
library(xlsxjars)
data <- read.xlsx("temp.xlsx", sheetIndex=1, colIndex=7:15, rowIndex=18:23)
data <- read.xlsx("temp.xlsx")
data <- read.xlsx("temp.xlsx", sheetIndex=1)
data1 <- read.xlsx("temp.xlsx", sheetIndex=1)
data1 <- read.xlsx2("temp.xlsx", sheetIndex=1)
data1 <- read.xlsx2("temp.xlsx", sheetIndex=0)
data1 <- read.xlsx2("temp.xlsx", sheetIndex=2)
data1 <- read.xlsx2("temp.xlsx", sheetIndex)
data1 <- read.xlsx2("temp.xlsx")
data1 <- read.xlsx2(file="temp.xlsx", sheetIndex=1)
data1 <- read.xlsx(file="temp.xlsx", sheetIndex=1)
library(xlsx)
data1 <- read.xlsx(file="temp.xlsx", sheetIndex=1)
exit
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url, destfile="temp1.xlsx")
data1 <- read.xlsx("temp1.xlsx", sheetIndex=1)
install.packages("rJava")
data1 <- read.xlsx("temp1.xlsx", sheetIndex=1)
library(xlsx)
data1 <- read.xlsx("temp1.xlsx", sheetIndex=1)
install.packages("xlsxjars")
library(xlsx)
data1 <- read.xlsx("temp1.xlsx", sheetIndex=1)
install.packages("xlsx")
library(xlsx)
data1 <- read.xlsx("temp1.xlsx", sheetIndex=1)
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(url, destfile="temp2.xml")
library(XML)
install.packages("XML")
library(XML)
doc <- xmlTreeParse(url, useInternal=TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata Fdata Frestaurants.xml"
doc <- xmlTreeParse(url, useInternal=TRUE)
url <- "https://d396qusza40orc.cloudfront.net/getdata data restaurants.xml"
doc <- xmlTreeParse(url, useInternal=TRUE)
download.file(url, destfile="temp2.xml")
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
download.file(url, destfile="temp2.xml")
doc <- xmlTreeParse("temp2.xml", useInternal=TRUE)
rootNode <- xmlRoot(doc)
names(rootNode)
xpathSApply(rooNode,//zipcode,xmlValue)
xpathSApply(rooNode,/zipcode,xmlValue)
xpathSApply(rooNode,zipcode,xmlValue)
xpathSApply(rootNode,zipcode,xmlValue)
xpathSApply(rootNode,//zipcode,xmlValue)
xpathSApply(rootNode,"//zipcode",xmlValue)
table <- xpathSApply(rootNode,"//zipcode",xmlValue)
dim(table)
table
table==21231
table[table==21231]
install.packages("httr")
library(httr)
oauth_endpoints("github")
myapp <- oauth_app("github", key="45615643de25463306b9", secret="c4596570fee46a66150d73c30dba726c59e9550f")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
fileurl <- https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(fileurl, destfile="data.csv")
read.csv("data.csv")
acs <- read.csv("data.csv")
sqldf("select * from acs where AGEP < 50")
install.packages("sqldf")
library(sqldf)
sqldf("select * from acs where AGEP < 50")
head(acs)
sqldf("select pwgtp1 from acs where AGEP < 50")
sqldf("select distinct AGEP from acs")
sqldf("select unique AGEP from acs")
con=url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlcode=readlines(con,10)
install.packages("httr")
library(httr)
htmlcode=readlines(con,10)
htmlcode=readLines(con,10)
htmlcode
htmlcode[10]
nchar(htmlcode[10])
htmlcode=readLines(con,100)
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
fileurl="https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"
download.file(fileurl, destfile="data.for")
read.table("data.for")
read.fwf("data.for")
read.fwf("data.for")
read.fwf?
q
str(read.fwf)
head(data.for)
table <- read.fwf("data.for")
table <- read.fwf("data.for", c(1,2,3))
head(table)
table <- read.fwf("data.for", c(10,2,3))
head(table)
table <- read.fwf("data.for", c(100,2,3))
head(table)
table <- read.fwf("data.for", c(1000,2,3))
head(table)
table <- read.fwf("data.for", c(12, 7,4, 9,4, 9,4, 9,4))
head(table)
table <- read.fwf("data.for", skip=4, widths=c(12, 7,4, 9,4, 9,4, 9,4))
head(table)
sum(table[,4])
nchar(htmlcode[10])
nchar(htmlcode[20])
nchar(htmlcode[30])
nchar(htmlcode[100])
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(fileurl, destfile="quiz41.csv")\
download.file(fileurl, destfile="quiz41.csv")
data <- read.table("quiz41.csv")
names(data)
head(data)
data <- read.csv("quiz41.csv")
head(data)
names(data)
splitnames <- strsplit(names(data), "wgtp")
splitnames[123]
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl, destfile="quiz42.csv")
data2 <- read.csv("quiz43.csv")
data2 <- read.csv("quiz42.csv")
head(data2)
data2 <- read.csv("quiz42.csv", skip=4)
head(data2)
sub(",", "", data$X.4)
head(data2)
sub(",", "", data2$X.4)
head(data2)
gsub(",", "", data2$X.4)
as.numeric(gsub(",", "", data2$X.4))
tail(data2)
data2 <- data2[1:190,]
tail(data2)
sum(as.numeric(gsub(",", "", data2$X.4)))
mean(as.numeric(gsub(",", "", data2$X.4)))
grep("^United", data2$X.3)
grep("^United", data2$X.3, value=TRUE)
grep("^[Uu]nited", data2$X.3, value=TRUE)
filerurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(fileurl, destfile="quiz4gdp.csv")
gdpData <- read.csv("quiz4gdp.csv")
fileurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(fileurl, destfile="quiz4edu.csv")
eduData <- read.csv("quiz4edu.csv")
head(gdpData)
eduData <- read.csv("quiz4edu.csv", skip=4)
eduData <- read.csv("quiz4edu.csv")
gdpData <- read.csv("quiz4gdp.csv", skip=4)
head(gdpData)
tail(gdpData)
gdpData <- gdpData[1:190,]
tail(gdpData)
head(eduData)
names(eduData)
dim(eduData)
dim(gdpData)
tail(eduData)
str(merge)
names(eduData)
names(gdpData)
head(gdpData)
CombData <- merge(gdpData, eduData, by.x="X", by.y="CountryCode")
dim(CombData)
combData$Special.Notes
combData[combData$Special.Notes]
CombData$Special.Notes
grep("Fiscal year end", CombData$Special.Notes, value=TRUE)
grep("Fiscal year end: June", CombData$Special.Notes, value=TRUE)
install.packages("quantmod")
amzn = getSymbols("AMZN",auto.assign=FALSE)
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
class(sampleTimes)
dim(sampleTimes)
sampleTimes
format(sampleTimes, format="%Y %a")
grep("2012", format(sampleTimes, format="%Y %a"))
dim(grep("2012", format(sampleTimes, format="%Y %a")))
length(grep("2012", format(sampleTimes, format="%Y %a")))
length(grep("2012 Mon", format(sampleTimes, format="%Y %a")))
setwd("C:/Users/KVAREDDY/Documents/GitHub/RepData_PeerAssessment1")
dir
dir()
data <- read.csv("activity/activity.csv")
head(data)
tapply(data, class)
sapply(data, class)
install.packages("knitr")
sapply(data, class)
head(data)
data$date = as.Date(data$data)
data$date = as.Date(data$date)
sapply(data, class)
head(data)
mean(data$steps, na.rm = TRUE)
mean(data$steps)
mean(data$steps, na.rm = TRUE)
summary(data$steps, na.rm = TRUE)
data$date = as.factor(data$date)
sapply(data, class)
tapply(data$steps, data$date, sum)
tapply(data$steps, data$date, sum, na.rm = TRUE)
mean(tapply(data$steps, data$date, sum, na.rm = TRUE))
median(tapply(data$steps, data$date, sum, na.rm = TRUE))
hist(tapply(data$steps, data$date, sum, na.rm = TRUE))
perDaySteps =  tapply(data$steps, data$date, sum, na.rm = TRUE)
hist(perDaySteps)
hist(perDaySteps, x.lab="steps per day")
hist(perDaySteps, xlab="steps per day")
title(xlab="steps per day")
tapply(data$steps, data$interval, mean)
tapply(data$steps, data$interval, mean, na.rm = TRUE)
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
dim(temp)
names(temp)
table(temp)
temp
plot(names(temp), temp)
plot(names(temp), temp, type="l")
plot(names(temp), temp, type="l", xlab="daf")
plot(names(temp), temp, type="l", xlab="interval")
plot(names(temp), temp, type="l", xlab="Intervals")
plot(names(temp), temp, type="l", xlab="Intervals", ylab="Average NUmber of Steps Taken")
plot(names(temp), temp, type="l", xlab="Intervals", ylab="Average Number of Steps Taken")
max(temp)
which(max(temp))
which.max(temp)
which.max(temp)
which.max(temp)[1]
which.max(temp)[[1]
]
which.max(temp)[[0]]
dim(which.max(temp))
names(temp)[which.max(temp)[[1]]]
any(is.na(data$data))
any(is.na(data$date))
any(is.na(data$interval))
any(is.na(data$steps))
rowSum(is.na(data$steps))
rowsum(is.na(data$steps))
rowsums(is.na(data$steps))
count(is.na(data$steps))
sum(is.na(data$steps))
temp[2]
temp[2][1]
temp[2][[1]
]
str(temp)
table(temp)
table(names(temp), temp)
temp1 = temp[,1]
temp1 = temp[1]
temp1
temp1 = colbind(names(temp), temp)
temp1 = cbind(names(temp), temp)
head(temp1)
temp1 = cbind(names(temp), as.numeric(temp)
)
temp1 = cbind(names(temp), as.numeric(temp)
)
head(temp1)
temp1 = cbind(names(temp), temp)
head(temp1)
names(temp)
temp
names(temp)
temp
temp1 data.frame(key=names(temp), value=temp)
temp1 <- data.frame(key=names(temp), value=temp)
head(temp1)
temp <- aggregate(data$steps ~ data$interval, FUN=mean, na.rm = TRUE)
head(temp)
str(aggregate)
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
head(temp)
mean(temp)
temp <- aggregate(data$steps ~ data$interval, FUN=mean, na.rm = TRUE)
mean(temp)
mean(temp[,2])
temp <- tapply(data$steps, data$date, mean, na.rm = TRUE)
mean(temp)
temp <- tapply(data$steps, data$date, sum, na.rm = TRUE)
mean(temp)
temp <- aggregate(data$steps ~ data$date, FUN=sum, na.rm = TRUE)
mean(temp[,2])
head(temp)
temp <- tapply(data$steps, data$date, sum, na.rm = TRUE)
head(temp)
temp <- aggregate(data$steps ~ data$date, FUN=sum)
head(temp)
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
head(temp)
str(temp)
names(temp)
temp[1]
temp[ ]
dim(temp)
dim(names(temp))
names(temp)
tempnames <- names(temp)
dim(tempnames)
tempnames[34]
tempnames[[34]
]
tempnames[[[34]]]
temp[34]
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
temp[323]
temp[234]
temp[34]
temp$245
class(temp)
class(tempnames)
library(plyr)
ddply(data$steps, data$interval, mean)
ddply(data$steps, data$interval, mean, na.rm=TRUE)
ddply(data$steps, .(data$interval), mean, na.rm=TRUE)
ddply(data$steps, .(data$interval), mean)
ddply(data, .(data$interval), mean = mean(steps, na.rm=TRUE))
temp <- ddply(data, .(data$interval), mean = mean(steps, na.rm=TRUE))
head(temp)
temp <- ddply(data, .(interval), mean = mean(steps, na.rm=TRUE))
head(temp)
temp <- ddply(data, .(interval), mean1 = mean(steps, na.rm=TRUE))
head(temp)
temp <- ddply(data, .(interval), mean)
temp <- ddply(data, .(interval), mean, na.rm=TRUE)
head(temp)
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
temp <- as.table(temp)
head(temp)
temp <- ddply(data, .(interval), mean, na.rm=TRUE)
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
temp <- as.data.frame(as.table(temp))
head(temp)
any(ia.na(data$steps))
any(is.na(data$steps))
data$interval(is.na(data$steps))
data$steps(is.na(data$steps))
data$steps[is.na(data$steps)]
which(is.na(data$steps))
data$interval[is.na(data$steps)]
head(temp)
nas <- which(is.na(data$steps))
nas[2]
head(temp)
data$interval[nas[2]]
temp[temp[,1]==5]
head(temp)
temp
temp[,1]
sapply(temp, class)
temp$var1 = as.numberic(as.character(temp$var1))
temp$var1 = as.numeric(as.character(temp$var1))
temp$Var1 = as.numeric(as.character(temp$Var1))
sapply(temp, class)
head(temp)
temp[temp[,1]==5]
temp[,1]
temp[,1]==5
temp[,1][temp[,1]==5]
temp[,2][temp[,1]==5]
temp
head(temp)
data$interval[nas[2]]
temp[,2][temp[,1]==data$interval[nas[2]]]
temp[,2][temp[,1]==data$interval[nas[5]]]
temp <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
temp <- as.data.frame(as.table(temp))
temp[,1] = as.numeric(as.character(temp[,1]))
sapply(temp, class)
temp[,2][temp[,1]==data$interval[nas[2]]]
sapply(nas, function(x) temp[,2][temp[,1]==data$interval[nas[x]]])
temp[,2][temp[,1]==data$interval[nas[2]]]
temp[,2][temp[,1]==data$interval[nas[3]]]
sapply(nas, function(x) temp[,2][temp[,1]==data$interval[x]])
data$steps[nas] = sapply(nas, function(x) temp[,2][temp[,1]==data$interval[x]])
head(data)
data$day = weekdays(as.Date(data$date))
head(data)
str(weekdays)
data$day = (weekdays(as.Date(data$date))==Sunday)
data$day = (weekdays(as.Date(data$date))=="Sunday")
head(data)
data$day = (weekdays(as.Date(data$date))=="Sunday") | ((weekdays(as.Date(data$date))=="Sunday"))
head(data)
where(data$day)
which(data$day)
data$day[which(data$day)] = "Weekend"
data$day[!which(data$day)] = "Weekday"
data$day[which(!data$day)] = "Weekday"
data$day[which(! data$day)] = "Weekday"
data$day[which(~ data$day)] = "Weekday"
data$bool = (weekdays(as.Date(data$date))=="Sunday") | ((weekdays(as.Date(data$date))=="Sunday"))
data$day[which(data$bool)] = "Weekend"
data$day[which(!data$bool)] = "Weekday"
head(data)
bool = (weekdays(as.Date(data$date))=="Sunday") | ((weekdays(as.Date(data$date))=="Sunday"))
bool <- (weekdays(as.Date(data$date))=="Sunday") | ((weekdays(as.Date(data$date))=="Sunday"))
avg <- tapply(data$steps, data$interval, mean, na.rm = TRUE)
avg <- tapply(data$steps, c(data$interval, data$day), mean, na.rm = TRUE)
head(data)
avg <- tapply(data$steps, c(data$interval, data$day), mean, na.rm = TRUE)
avg <- tapply(data$steps, c(data$interval, data$day), mean)
avg <- tapply(data$steps[which(data$day=="weekday")], data$interval, mean)
avg <- tapply(data$steps[which(data$day=="weekday")], data$interval[which(data$day=="weekday")], mean)
head(avg)
avg
steps1 <- data$steps[which(data$day=="weekday")]
head(step1)
head(steps1)
head(data)
steps1 <- data$steps[which(data$day=="Weekday")]
head(data)
head(step1)
head(steps1)
avg <- tapply(data$steps[which(data$day=="Weekday")], data$interval[which(data$day=="Weekday")], mean)
steps`
1
avg
avg <- tapply(data$steps[which(data$day=="Weekday")], data$interval[which(data$day=="Weekday")], mean)
avg1 <- tapply(data$steps[which(data$day=="Weekday")], data$interval[which(data$day=="Weekday")], mean)
avg2 <- tapply(data$steps[which(data$day=="Weekend")], data$interval[which(data$day=="Weekend")], mean)
avg1 <- as.data.frame(as.table(avg1))
avg2 <- as.data.frame(as.table(avg2))
head(avg1)
head(avg2)
avg1$day="weekday"
head(avg1)
avg2$day="weekend"
avg <- rbind(avg1, avg2)
xyplot(var1 ~ Freq | day, data=avg)
install.packages("lattice")
library(lattice)
xyplot(var1 ~ Freq | day, data=avg)
xyplot(Var1 ~ Freq | day, data=avg)
xyplot(Freq ~ Var1 | day, data=avg)
xyplot(Freq ~ Var1 | day, data=avg, layout=c(1,2))
avg$var1 <- as.numeric(avg$var1)
head(avg)
sapply(avg, class)
avg$var1 <- as.numeric(as.character(avg$var1))
avg$Var1 <- as.numeric(as.character(avg$Var1))
sapply(avg, class)
xyplot(Freq ~ Var1 | day, data=avg, layout=c(1,2))
str(xyplot)
xyplot(Freq ~ Var1 | day, data=avg, layout=c(1,2), type='l')
avg1 <- tapply(data$steps[which(data$day=="Weekday")], data$interval[which(data$day=="Weekday")], mean)
avg2 <- tapply(data$steps[which(data$day=="Weekend")], data$interval[which(data$day=="Weekend")], mean)
